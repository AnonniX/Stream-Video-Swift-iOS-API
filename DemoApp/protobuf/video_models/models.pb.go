// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: video_models/models.proto

package video_models

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Codec int32

const (
	Codec_H264 Codec = 0
	Codec_VP8  Codec = 1
	Codec_VP9  Codec = 2
)

// Enum value maps for Codec.
var (
	Codec_name = map[int32]string{
		0: "H264",
		1: "VP8",
		2: "VP9",
	}
	Codec_value = map[string]int32{
		"H264": 0,
		"VP8":  1,
		"VP9":  2,
	}
)

func (x Codec) Enum() *Codec {
	p := new(Codec)
	*p = x
	return p
}

func (x Codec) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Codec) Descriptor() protoreflect.EnumDescriptor {
	return file_video_models_models_proto_enumTypes[0].Descriptor()
}

func (Codec) Type() protoreflect.EnumType {
	return &file_video_models_models_proto_enumTypes[0]
}

func (x Codec) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Codec.Descriptor instead.
func (Codec) EnumDescriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{0}
}

type RecordingStorage int32

const (
	RecordingStorage_S3 RecordingStorage = 0
)

// Enum value maps for RecordingStorage.
var (
	RecordingStorage_name = map[int32]string{
		0: "S3",
	}
	RecordingStorage_value = map[string]int32{
		"S3": 0,
	}
)

func (x RecordingStorage) Enum() *RecordingStorage {
	p := new(RecordingStorage)
	*p = x
	return p
}

func (x RecordingStorage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordingStorage) Descriptor() protoreflect.EnumDescriptor {
	return file_video_models_models_proto_enumTypes[1].Descriptor()
}

func (RecordingStorage) Type() protoreflect.EnumType {
	return &file_video_models_models_proto_enumTypes[1]
}

func (x RecordingStorage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordingStorage.Descriptor instead.
func (RecordingStorage) EnumDescriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{1}
}

// TODO this is actually one of the most complex UI things in zoom :)
// controls if regular users are allowed to do the following
// yes/no/request
type Security_IsAllowed int32

const (
	Security_YES     Security_IsAllowed = 0
	Security_NO      Security_IsAllowed = 1
	Security_REQUEST Security_IsAllowed = 2
)

// Enum value maps for Security_IsAllowed.
var (
	Security_IsAllowed_name = map[int32]string{
		0: "YES",
		1: "NO",
		2: "REQUEST",
	}
	Security_IsAllowed_value = map[string]int32{
		"YES":     0,
		"NO":      1,
		"REQUEST": 2,
	}
)

func (x Security_IsAllowed) Enum() *Security_IsAllowed {
	p := new(Security_IsAllowed)
	*p = x
	return p
}

func (x Security_IsAllowed) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Security_IsAllowed) Descriptor() protoreflect.EnumDescriptor {
	return file_video_models_models_proto_enumTypes[2].Descriptor()
}

func (Security_IsAllowed) Type() protoreflect.EnumType {
	return &file_video_models_models_proto_enumTypes[2]
}

func (x Security_IsAllowed) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Security_IsAllowed.Descriptor instead.
func (Security_IsAllowed) EnumDescriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{14, 0}
}

// Edges are where we deploy video servers
type Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	LatencyURL string `protobuf:"bytes,2,opt,name=LatencyURL,proto3" json:"LatencyURL,omitempty"`
}

func (x *Edge) Reset() {
	*x = Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edge) ProtoMessage() {}

func (x *Edge) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edge.ProtoReflect.Descriptor instead.
func (*Edge) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{0}
}

func (x *Edge) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Edge) GetLatencyURL() string {
	if x != nil {
		return x.LatencyURL
	}
	return ""
}

// Edges are where we deploy video servers
type EdgeServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *EdgeServer) Reset() {
	*x = EdgeServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeServer) ProtoMessage() {}

func (x *EdgeServer) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeServer.ProtoReflect.Descriptor instead.
func (*EdgeServer) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{1}
}

func (x *EdgeServer) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Latency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measurements []float32 `protobuf:"fixed32,1,rep,packed,name=measurements,proto3" json:"measurements,omitempty"`
}

func (x *Latency) Reset() {
	*x = Latency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Latency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Latency) ProtoMessage() {}

func (x *Latency) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Latency.ProtoReflect.Descriptor instead.
func (*Latency) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{2}
}

func (x *Latency) GetMeasurements() []float32 {
	if x != nil {
		return x.Measurements
	}
	return nil
}

// 3 different type of broadcast
type Broadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Types that are assignable to Details:
	//	*Broadcast_Rtmp
	//	*Broadcast_Hls
	//	*Broadcast_Record
	Details isBroadcast_Details `protobuf_oneof:"Details"`
}

func (x *Broadcast) Reset() {
	*x = Broadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Broadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broadcast) ProtoMessage() {}

func (x *Broadcast) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broadcast.ProtoReflect.Descriptor instead.
func (*Broadcast) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{3}
}

func (x *Broadcast) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (m *Broadcast) GetDetails() isBroadcast_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *Broadcast) GetRtmp() *RTMPBroadcast {
	if x, ok := x.GetDetails().(*Broadcast_Rtmp); ok {
		return x.Rtmp
	}
	return nil
}

func (x *Broadcast) GetHls() *HLSBroadcast {
	if x, ok := x.GetDetails().(*Broadcast_Hls); ok {
		return x.Hls
	}
	return nil
}

func (x *Broadcast) GetRecord() *RecordBroadcast {
	if x, ok := x.GetDetails().(*Broadcast_Record); ok {
		return x.Record
	}
	return nil
}

type isBroadcast_Details interface {
	isBroadcast_Details()
}

type Broadcast_Rtmp struct {
	Rtmp *RTMPBroadcast `protobuf:"bytes,2,opt,name=rtmp,proto3,oneof"`
}

type Broadcast_Hls struct {
	Hls *HLSBroadcast `protobuf:"bytes,3,opt,name=hls,proto3,oneof"`
}

type Broadcast_Record struct {
	Record *RecordBroadcast `protobuf:"bytes,4,opt,name=record,proto3,oneof"`
}

func (*Broadcast_Rtmp) isBroadcast_Details() {}

func (*Broadcast_Hls) isBroadcast_Details() {}

func (*Broadcast_Record) isBroadcast_Details() {}

type RTMPBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallID   string   `protobuf:"bytes,1,opt,name=CallID,proto3" json:"CallID,omitempty"`
	RTMPUrls []string `protobuf:"bytes,2,rep,name=RTMPUrls,proto3" json:"RTMPUrls,omitempty"`
	Width    int32    `protobuf:"varint,3,opt,name=Width,proto3" json:"Width,omitempty"`
	Height   int32    `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *RTMPBroadcast) Reset() {
	*x = RTMPBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RTMPBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RTMPBroadcast) ProtoMessage() {}

func (x *RTMPBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RTMPBroadcast.ProtoReflect.Descriptor instead.
func (*RTMPBroadcast) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{4}
}

func (x *RTMPBroadcast) GetCallID() string {
	if x != nil {
		return x.CallID
	}
	return ""
}

func (x *RTMPBroadcast) GetRTMPUrls() []string {
	if x != nil {
		return x.RTMPUrls
	}
	return nil
}

func (x *RTMPBroadcast) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *RTMPBroadcast) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type HLSBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HLSBroadcast) Reset() {
	*x = HLSBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HLSBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HLSBroadcast) ProtoMessage() {}

func (x *HLSBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HLSBroadcast.ProtoReflect.Descriptor instead.
func (*HLSBroadcast) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{5}
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Composite bool   `protobuf:"varint,2,opt,name=Composite,proto3" json:"Composite,omitempty"`
	UserID    string `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	URL       string `protobuf:"bytes,4,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{6}
}

func (x *File) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *File) GetComposite() bool {
	if x != nil {
		return x.Composite
	}
	return false
}

func (x *File) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *File) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type RecordBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Composite bool    `protobuf:"varint,1,opt,name=Composite,proto3" json:"Composite,omitempty"` // if true merge all audio and video, if false split them
	Files     []*File `protobuf:"bytes,2,rep,name=Files,proto3" json:"Files,omitempty"`
}

func (x *RecordBroadcast) Reset() {
	*x = RecordBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordBroadcast) ProtoMessage() {}

func (x *RecordBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordBroadcast.ProtoReflect.Descriptor instead.
func (*RecordBroadcast) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{7}
}

func (x *RecordBroadcast) GetComposite() bool {
	if x != nil {
		return x.Composite
	}
	return false
}

func (x *RecordBroadcast) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// TODO: zoom allows you to invite any of your colleagues in their invite screen
	Teams     []string               `protobuf:"bytes,2,rep,name=Teams,proto3" json:"Teams,omitempty"`
	Type      string                 `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{8}
}

func (x *User) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *User) GetTeams() []string {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *User) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID           string                 `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ID               string                 `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	PushProvider     string                 `protobuf:"bytes,3,opt,name=PushProvider,proto3" json:"PushProvider,omitempty"`
	Disabled         bool                   `protobuf:"varint,4,opt,name=Disabled,proto3" json:"Disabled,omitempty"`
	DisabledReason   string                 `protobuf:"bytes,5,opt,name=DisabledReason,proto3" json:"DisabledReason,omitempty"`
	PushProviderName string                 `protobuf:"bytes,6,opt,name=PushProviderName,proto3" json:"PushProviderName,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{9}
}

func (x *Device) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Device) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Device) GetPushProvider() string {
	if x != nil {
		return x.PushProvider
	}
	return ""
}

func (x *Device) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *Device) GetDisabledReason() string {
	if x != nil {
		return x.DisabledReason
	}
	return ""
}

func (x *Device) GetPushProviderName() string {
	if x != nil {
		return x.PushProviderName
	}
	return ""
}

func (x *Device) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Device) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type RecordingStorageOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage    RecordingStorage `protobuf:"varint,2,opt,name=Storage,proto3,enum=stream.video.RecordingStorage" json:"Storage,omitempty"`
	AccessKey  string           `protobuf:"bytes,3,opt,name=AccessKey,proto3" json:"AccessKey,omitempty"`
	SecretKey  string           `protobuf:"bytes,4,opt,name=SecretKey,proto3" json:"SecretKey,omitempty"`
	BucketName string           `protobuf:"bytes,5,opt,name=BucketName,proto3" json:"BucketName,omitempty"`
	Region     string           `protobuf:"bytes,6,opt,name=Region,proto3" json:"Region,omitempty"`
	Path       string           `protobuf:"bytes,7,opt,name=Path,proto3" json:"Path,omitempty"`
}

func (x *RecordingStorageOptions) Reset() {
	*x = RecordingStorageOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordingStorageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingStorageOptions) ProtoMessage() {}

func (x *RecordingStorageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingStorageOptions.ProtoReflect.Descriptor instead.
func (*RecordingStorageOptions) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{10}
}

func (x *RecordingStorageOptions) GetStorage() RecordingStorage {
	if x != nil {
		return x.Storage
	}
	return RecordingStorage_S3
}

func (x *RecordingStorageOptions) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *RecordingStorageOptions) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *RecordingStorageOptions) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *RecordingStorageOptions) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RecordingStorageOptions) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type BroadcastOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RtmpURL string `protobuf:"bytes,1,opt,name=RtmpURL,proto3" json:"RtmpURL,omitempty"`
	HlsUrl  string `protobuf:"bytes,2,opt,name=HlsUrl,proto3" json:"HlsUrl,omitempty"`
}

func (x *BroadcastOptions) Reset() {
	*x = BroadcastOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastOptions) ProtoMessage() {}

func (x *BroadcastOptions) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastOptions.ProtoReflect.Descriptor instead.
func (*BroadcastOptions) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{11}
}

func (x *BroadcastOptions) GetRtmpURL() string {
	if x != nil {
		return x.RtmpURL
	}
	return ""
}

func (x *BroadcastOptions) GetHlsUrl() string {
	if x != nil {
		return x.HlsUrl
	}
	return ""
}

type TranscribeOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TranscribeOptions) Reset() {
	*x = TranscribeOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranscribeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeOptions) ProtoMessage() {}

func (x *TranscribeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeOptions.ProtoReflect.Descriptor instead.
func (*TranscribeOptions) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{12}
}

type CallType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string    `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Security *Security `protobuf:"bytes,2,opt,name=Security,proto3" json:"Security,omitempty"`
	// enable broadcasting by default when creating a call of this type
	Broadcast        bool                `protobuf:"varint,3,opt,name=Broadcast,proto3" json:"Broadcast,omitempty"`
	BroadcastOptions []*BroadcastOptions `protobuf:"bytes,4,rep,name=BroadcastOptions,proto3" json:"BroadcastOptions,omitempty"`
	// enable transcription by default
	Transcribe        bool                   `protobuf:"varint,5,opt,name=Transcribe,proto3" json:"Transcribe,omitempty"`
	TranscribeOptions *TranscribeOptions     `protobuf:"bytes,6,opt,name=TranscribeOptions,proto3" json:"TranscribeOptions,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *CallType) Reset() {
	*x = CallType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallType) ProtoMessage() {}

func (x *CallType) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallType.ProtoReflect.Descriptor instead.
func (*CallType) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{13}
}

func (x *CallType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CallType) GetSecurity() *Security {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *CallType) GetBroadcast() bool {
	if x != nil {
		return x.Broadcast
	}
	return false
}

func (x *CallType) GetBroadcastOptions() []*BroadcastOptions {
	if x != nil {
		return x.BroadcastOptions
	}
	return nil
}

func (x *CallType) GetTranscribe() bool {
	if x != nil {
		return x.Transcribe
	}
	return false
}

func (x *CallType) GetTranscribeOptions() *TranscribeOptions {
	if x != nil {
		return x.TranscribeOptions
	}
	return nil
}

func (x *CallType) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CallType) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Security struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HideProfilePictures bool               `protobuf:"varint,1,opt,name=HideProfilePictures,proto3" json:"HideProfilePictures,omitempty"`
	ShareScreen         Security_IsAllowed `protobuf:"varint,2,opt,name=ShareScreen,proto3,enum=stream.video.Security_IsAllowed" json:"ShareScreen,omitempty"`
	RenameUser          bool               `protobuf:"varint,3,opt,name=RenameUser,proto3" json:"RenameUser,omitempty"`
	Unmute              Security_IsAllowed `protobuf:"varint,4,opt,name=Unmute,proto3,enum=stream.video.Security_IsAllowed" json:"Unmute,omitempty"`
	StartVideo          Security_IsAllowed `protobuf:"varint,5,opt,name=StartVideo,proto3,enum=stream.video.Security_IsAllowed" json:"StartVideo,omitempty"`
	ScreenShare         Security_IsAllowed `protobuf:"varint,6,opt,name=ScreenShare,proto3,enum=stream.video.Security_IsAllowed" json:"ScreenShare,omitempty"`
	Record              Security_IsAllowed `protobuf:"varint,7,opt,name=Record,proto3,enum=stream.video.Security_IsAllowed" json:"Record,omitempty"`
	Broadcast           Security_IsAllowed `protobuf:"varint,8,opt,name=Broadcast,proto3,enum=stream.video.Security_IsAllowed" json:"Broadcast,omitempty"`
}

func (x *Security) Reset() {
	*x = Security{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Security) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Security) ProtoMessage() {}

func (x *Security) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Security.ProtoReflect.Descriptor instead.
func (*Security) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{14}
}

func (x *Security) GetHideProfilePictures() bool {
	if x != nil {
		return x.HideProfilePictures
	}
	return false
}

func (x *Security) GetShareScreen() Security_IsAllowed {
	if x != nil {
		return x.ShareScreen
	}
	return Security_YES
}

func (x *Security) GetRenameUser() bool {
	if x != nil {
		return x.RenameUser
	}
	return false
}

func (x *Security) GetUnmute() Security_IsAllowed {
	if x != nil {
		return x.Unmute
	}
	return Security_YES
}

func (x *Security) GetStartVideo() Security_IsAllowed {
	if x != nil {
		return x.StartVideo
	}
	return Security_YES
}

func (x *Security) GetScreenShare() Security_IsAllowed {
	if x != nil {
		return x.ScreenShare
	}
	return Security_YES
}

func (x *Security) GetRecord() Security_IsAllowed {
	if x != nil {
		return x.Record
	}
	return Security_YES
}

func (x *Security) GetBroadcast() Security_IsAllowed {
	if x != nil {
		return x.Broadcast
	}
	return Security_YES
}

// those who are online in the call
type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Role   string `protobuf:"bytes,2,opt,name=Role,proto3" json:"Role,omitempty"`
	Online bool   `protobuf:"varint,3,opt,name=Online,proto3" json:"Online,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{15}
}

func (x *Participant) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Participant) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Participant) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

type CallState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Little different to member/watcher concept. Both are in the participant list
	CallId       string         `protobuf:"bytes,1,opt,name=CallId,proto3" json:"CallId,omitempty"`
	Participants []*Participant `protobuf:"bytes,2,rep,name=Participants,proto3" json:"Participants,omitempty"`
}

func (x *CallState) Reset() {
	*x = CallState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallState) ProtoMessage() {}

func (x *CallState) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallState.ProtoReflect.Descriptor instead.
func (*CallState) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{16}
}

func (x *CallState) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *CallState) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

type Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	CreatedByUserID string                 `protobuf:"bytes,3,opt,name=CreatedByUserID,proto3" json:"CreatedByUserID,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	// enable broadcasting by default when creating a call of this type
	Broadcast        bool                `protobuf:"varint,6,opt,name=Broadcast,proto3" json:"Broadcast,omitempty"`
	BroadcastOptions []*BroadcastOptions `protobuf:"bytes,7,rep,name=BroadcastOptions,proto3" json:"BroadcastOptions,omitempty"`
	// enable transcription by default
	Transcribe        bool               `protobuf:"varint,8,opt,name=Transcribe,proto3" json:"Transcribe,omitempty"`
	TranscribeOptions *TranscribeOptions `protobuf:"bytes,9,opt,name=TranscribeOptions,proto3" json:"TranscribeOptions,omitempty"`
}

func (x *Call) Reset() {
	*x = Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_models_models_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Call) ProtoMessage() {}

func (x *Call) ProtoReflect() protoreflect.Message {
	mi := &file_video_models_models_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Call.ProtoReflect.Descriptor instead.
func (*Call) Descriptor() ([]byte, []int) {
	return file_video_models_models_proto_rawDescGZIP(), []int{17}
}

func (x *Call) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Call) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Call) GetCreatedByUserID() string {
	if x != nil {
		return x.CreatedByUserID
	}
	return ""
}

func (x *Call) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Call) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Call) GetBroadcast() bool {
	if x != nil {
		return x.Broadcast
	}
	return false
}

func (x *Call) GetBroadcastOptions() []*BroadcastOptions {
	if x != nil {
		return x.BroadcastOptions
	}
	return nil
}

func (x *Call) GetTranscribe() bool {
	if x != nil {
		return x.Transcribe
	}
	return false
}

func (x *Call) GetTranscribeOptions() *TranscribeOptions {
	if x != nil {
		return x.TranscribeOptions
	}
	return nil
}

var File_video_models_models_proto protoreflect.FileDescriptor

var file_video_models_models_proto_rawDesc = []byte{
	0x0a, 0x19, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x4c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x55, 0x52,
	0x4c, 0x22, 0x1e, 0x0a, 0x0a, 0x45, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0x2d, 0x0a, 0x07, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xc2, 0x01, 0x0a, 0x09, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x31,
	0x0a, 0x04, 0x72, 0x74, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52, 0x54, 0x4d, 0x50,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x72, 0x74, 0x6d,
	0x70, 0x12, 0x2e, 0x0a, 0x03, 0x68, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x48, 0x4c,
	0x53, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x03, 0x68, 0x6c,
	0x73, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x71, 0x0a, 0x0d, 0x52, 0x54, 0x4d, 0x50, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x54, 0x4d, 0x50, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x52, 0x54, 0x4d, 0x50, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x48, 0x4c, 0x53, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52,
	0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x22, 0x59, 0x0a, 0x0f,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x65, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb8, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x75,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x75,
	0x73, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38,
	0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x44, 0x0a, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x74, 0x6d, 0x70, 0x55, 0x52, 0x4c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x74, 0x6d, 0x70, 0x55, 0x52, 0x4c, 0x12, 0x16,
	0x0a, 0x06, 0x48, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x48, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x22, 0x13, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9f, 0x03, 0x0a, 0x08,
	0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x08,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x4a,
	0x0a, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x85, 0x04,
	0x0a, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x48, 0x69,
	0x64, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x48, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0b,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x52, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x38, 0x0a, 0x06, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x52, 0x06, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x52, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x42, 0x0a, 0x0b,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x52, 0x0b, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x12, 0x38, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x52, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x3e, 0x0a, 0x09, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52,
	0x09, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x09, 0x49, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x59, 0x45, 0x53, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x4e, 0x4f, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x02, 0x22, 0x51, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x62, 0x0a, 0x09, 0x43, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x3d, 0x0a,
	0x0c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0xaa, 0x03, 0x0a,
	0x04, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x4a,
	0x0a, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x23, 0x0a, 0x05, 0x43, 0x6f, 0x64,
	0x65, 0x63, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x32, 0x36, 0x34, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x56, 0x50, 0x38, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x50, 0x39, 0x10, 0x02, 0x2a, 0x1a,
	0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x33, 0x10, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_models_models_proto_rawDescOnce sync.Once
	file_video_models_models_proto_rawDescData = file_video_models_models_proto_rawDesc
)

func file_video_models_models_proto_rawDescGZIP() []byte {
	file_video_models_models_proto_rawDescOnce.Do(func() {
		file_video_models_models_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_models_models_proto_rawDescData)
	})
	return file_video_models_models_proto_rawDescData
}

var file_video_models_models_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_video_models_models_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_video_models_models_proto_goTypes = []interface{}{
	(Codec)(0),                      // 0: stream.video.Codec
	(RecordingStorage)(0),           // 1: stream.video.RecordingStorage
	(Security_IsAllowed)(0),         // 2: stream.video.Security.IsAllowed
	(*Edge)(nil),                    // 3: stream.video.Edge
	(*EdgeServer)(nil),              // 4: stream.video.EdgeServer
	(*Latency)(nil),                 // 5: stream.video.Latency
	(*Broadcast)(nil),               // 6: stream.video.Broadcast
	(*RTMPBroadcast)(nil),           // 7: stream.video.RTMPBroadcast
	(*HLSBroadcast)(nil),            // 8: stream.video.HLSBroadcast
	(*File)(nil),                    // 9: stream.video.File
	(*RecordBroadcast)(nil),         // 10: stream.video.RecordBroadcast
	(*User)(nil),                    // 11: stream.video.User
	(*Device)(nil),                  // 12: stream.video.Device
	(*RecordingStorageOptions)(nil), // 13: stream.video.RecordingStorageOptions
	(*BroadcastOptions)(nil),        // 14: stream.video.BroadcastOptions
	(*TranscribeOptions)(nil),       // 15: stream.video.TranscribeOptions
	(*CallType)(nil),                // 16: stream.video.CallType
	(*Security)(nil),                // 17: stream.video.Security
	(*Participant)(nil),             // 18: stream.video.Participant
	(*CallState)(nil),               // 19: stream.video.CallState
	(*Call)(nil),                    // 20: stream.video.Call
	(*timestamppb.Timestamp)(nil),   // 21: google.protobuf.Timestamp
}
var file_video_models_models_proto_depIdxs = []int32{
	7,  // 0: stream.video.Broadcast.rtmp:type_name -> stream.video.RTMPBroadcast
	8,  // 1: stream.video.Broadcast.hls:type_name -> stream.video.HLSBroadcast
	10, // 2: stream.video.Broadcast.record:type_name -> stream.video.RecordBroadcast
	9,  // 3: stream.video.RecordBroadcast.Files:type_name -> stream.video.File
	21, // 4: stream.video.User.CreatedAt:type_name -> google.protobuf.Timestamp
	21, // 5: stream.video.User.UpdatedAt:type_name -> google.protobuf.Timestamp
	21, // 6: stream.video.Device.CreatedAt:type_name -> google.protobuf.Timestamp
	21, // 7: stream.video.Device.UpdatedAt:type_name -> google.protobuf.Timestamp
	1,  // 8: stream.video.RecordingStorageOptions.Storage:type_name -> stream.video.RecordingStorage
	17, // 9: stream.video.CallType.Security:type_name -> stream.video.Security
	14, // 10: stream.video.CallType.BroadcastOptions:type_name -> stream.video.BroadcastOptions
	15, // 11: stream.video.CallType.TranscribeOptions:type_name -> stream.video.TranscribeOptions
	21, // 12: stream.video.CallType.CreatedAt:type_name -> google.protobuf.Timestamp
	21, // 13: stream.video.CallType.UpdatedAt:type_name -> google.protobuf.Timestamp
	2,  // 14: stream.video.Security.ShareScreen:type_name -> stream.video.Security.IsAllowed
	2,  // 15: stream.video.Security.Unmute:type_name -> stream.video.Security.IsAllowed
	2,  // 16: stream.video.Security.StartVideo:type_name -> stream.video.Security.IsAllowed
	2,  // 17: stream.video.Security.ScreenShare:type_name -> stream.video.Security.IsAllowed
	2,  // 18: stream.video.Security.Record:type_name -> stream.video.Security.IsAllowed
	2,  // 19: stream.video.Security.Broadcast:type_name -> stream.video.Security.IsAllowed
	18, // 20: stream.video.CallState.Participants:type_name -> stream.video.Participant
	21, // 21: stream.video.Call.CreatedAt:type_name -> google.protobuf.Timestamp
	21, // 22: stream.video.Call.UpdatedAt:type_name -> google.protobuf.Timestamp
	14, // 23: stream.video.Call.BroadcastOptions:type_name -> stream.video.BroadcastOptions
	15, // 24: stream.video.Call.TranscribeOptions:type_name -> stream.video.TranscribeOptions
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_video_models_models_proto_init() }
func file_video_models_models_proto_init() {
	if File_video_models_models_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_video_models_models_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Latency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Broadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RTMPBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HLSBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordingStorageOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranscribeOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Security); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_models_models_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_video_models_models_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Broadcast_Rtmp)(nil),
		(*Broadcast_Hls)(nil),
		(*Broadcast_Record)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_models_models_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_video_models_models_proto_goTypes,
		DependencyIndexes: file_video_models_models_proto_depIdxs,
		EnumInfos:         file_video_models_models_proto_enumTypes,
		MessageInfos:      file_video_models_models_proto_msgTypes,
	}.Build()
	File_video_models_models_proto = out.File
	file_video_models_models_proto_rawDesc = nil
	file_video_models_models_proto_goTypes = nil
	file_video_models_models_proto_depIdxs = nil
}
