//
// CallMemberAddedEvent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** This event is sent when one or more members are added to a call */




internal struct CallMemberAddedEvent: Codable, JSONEncodable, Hashable, WSCallEvent {

    internal var call: CallResponse
    internal var callCid: String
    internal var createdAt: Date
    /** the members added to this call */
    internal var members: [MemberResponse]
    /** The type of event: \"call.member_added\" in this case */
    internal var type: String = "call.member_added"

    internal init(call: CallResponse, callCid: String, createdAt: Date, members: [MemberResponse], type: String = "call.member_added") {
        self.call = call
        self.callCid = callCid
        self.createdAt = createdAt
        self.members = members
        self.type = type
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case call
        case callCid = "call_cid"
        case createdAt = "created_at"
        case members
        case type
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(call, forKey: .call)
        try container.encode(callCid, forKey: .callCid)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(members, forKey: .members)
        try container.encode(type, forKey: .type)
    }
}

