//
// RecordSettings.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif





internal struct RecordSettings: Codable, JSONEncodable, Hashable {

    internal enum Mode: String, Codable, CaseIterable {
        case available = "available"
        case disabled = "disabled"
        case autoOn = "auto-on"
    }
    internal enum Quality: String, Codable, CaseIterable {
        case audioOnly = "audio-only"
        case _360p = "360p"
        case _480p = "480p"
        case _720p = "720p"
        case _1080p = "1080p"
        case _1440p = "1440p"
    }
    internal var audioOnly: Bool
    internal var mode: Mode
    internal var quality: Quality

    internal init(audioOnly: Bool, mode: Mode, quality: Quality) {
        self.audioOnly = audioOnly
        self.mode = mode
        self.quality = quality
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case audioOnly = "audio_only"
        case mode
        case quality
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(audioOnly, forKey: .audioOnly)
        try container.encode(mode, forKey: .mode)
        try container.encode(quality, forKey: .quality)
    }
}

