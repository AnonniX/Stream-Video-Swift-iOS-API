//
// CallReactionEvent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** This event is sent when a reaction is sent in a call, clients should use this to show the reaction in the call screen */




internal struct CallReactionEvent: Codable, JSONEncodable, Hashable, WSCallEvent {

    internal var callCid: String
    internal var createdAt: Date
    internal var reaction: ReactionResponse
    /** The type of event: \"call.reaction_new\" in this case */
    internal var type: String = "call.reaction_new"

    internal init(callCid: String, createdAt: Date, reaction: ReactionResponse, type: String = "call.reaction_new") {
        self.callCid = callCid
        self.createdAt = createdAt
        self.reaction = reaction
        self.type = type
    }

    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case callCid = "call_cid"
        case createdAt = "created_at"
        case reaction
        case type
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(callCid, forKey: .callCid)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(reaction, forKey: .reaction)
        try container.encode(type, forKey: .type)
    }
}

